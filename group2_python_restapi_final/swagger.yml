openapi: 3.0.0
info:
  title: Car Registration Catalog
  description: Information about car registration
  version: 1.0.0
servers:
  - url: /api

paths:
  /cars:
    get:
      summary: Get all information about car registration
      operationId: api.read_all
      responses:
        "200":
          description: Successfully retrieved information about car registration
    post:
      summary: Create a new CarID
      operationId: api.create_instance
      requestBody:
        description: Create a new Car ID
        content:
          application/json:
            schema:
              x-body-name: instance
              $ref: "#/components/schemas/Instance"
      responses:
        "201":
          description: Successfully created
        "409":
          description: Provided CarID already exists
  /instances/{name}:
    get:
      summary: Read one instance
      operationId: api.read_one_instance
      parameters:
        - $ref: "#/components/parameters/name"
      responses:
        "200":
          description: Successfully read one instance
    delete:
      summary: Delete one instance
      operationId: api.delete_instance
      parameters:
        - $ref: "#/components/parameters/name"
      responses:
        "200":
          description: Successfully deleted instance
        "404":
          description: Car ID does not exist
    put:
      summary: Update Car information
      operationId: api.update_instance
      parameters:
        - $ref: "#/components/parameters/name"
      requestBody:
        description: Create a new instance
        content:
          application/json:
            schema:
              x-body-name: instance
              $ref: "#/components/schemas/Instance"
      responses:
        "200":
          description: Car infomration updated successfully
components:
  schemas:
    Instance:
      required:
        - name
      properties:
        name:
          type: string
        ami:
          type: string
        region:
          type: string
  parameters:
    name:
      name: name
      description: Instance name
      in: path
      required: true
      schema:
        type: string